{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import \"@k2oss/k2-broker-core\";\r\nmetadata = {\r\n  \"systemName\": \"bazTestBroker\",\r\n  \"displayName\": \"Adobesign Broker\",\r\n  \"description\": \"Adobesign broker that accesses JSONPlaceholder.\",\r\n  \"configuration\": {\r\n      \"ServiceURL\": {\r\n          \"displayName\" : \"Adobesign URL\",\r\n          \"type\" : \"string\",\r\n          \"value\" : \"https://api.na2.adobesign.com/api/rest/v6\"\r\n      },\r\n      \"AccessToken\":{\r\n        \"displayName\" : \"Access Token\",\r\n        \"type\": \"string\",\r\n        \"value\" : \"3AAABLblqZhAsz7fkOci1ND7WDd20jYyUz2iHXweewyBfHX9jB46rtcAVKjL89-ty8o7dqbFLDVje0C5AF5vG_OC88kQNkjfL\"\r\n      }\r\n  }\r\n};\r\nondescribe = function () {\r\n  console.log(\"test\");\r\n  postSchema({\r\n    objects: {\r\n      \"getid\": {\r\n        displayName: \"Get ID\",\r\n        description: \"Get Transaction ID\",\r\n        isActive: true,\r\n        properties: {\r\n          \"transDocId\": {displayName: \"transient Document Id\", type: \"string\"},\r\n        },\r\n        methods: {\r\n          \"getDocs\": {\r\n            displayName: \"Get Docs\",\r\n            type: \"read\",\r\n            outputs: [\"transDocId\"],\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n};\r\nonexecute = function ({objectName, methodName, parameters, properties, configuration }) {\r\n  switch (objectName) {\r\n    case \"getid\":\r\n      executeXHRTest(methodName, parameters, properties, configuration);\r\n      break;\r\n    default:\r\n      throw new Error(\"The object \" + objectName + \" is not supported.\");\r\n  }\r\n};\r\nfunction executeXHRTest(methodName, parameters, properties, configuration) {\r\n  switch (methodName) {\r\n    case \"getDocs\":\r\n      executeGetTransDocId(parameters, properties, configuration);\r\n      break;\r\n    default:\r\n      throw new Error(\"The method \" + methodName + \" is not supported.\");\r\n  }\r\n}\r\nfunction executeGetTransDocId(parameters, properties, configuration) {\r\n  var urlValue = configuration[\"ServiceURL\"];\r\n  var urlToken = configuration[\"AccessToken\"];\r\n\r\n  var form = new FormData();\r\n  form.append(\"File\", \"sign this doc please\");\r\n  form.append(\"File-Name\", \"please_sign.docx\");\r\n\r\n  var xhr = new XMLHttpRequest();\r\n  // xhr.withCredentials = true;\r\n  \r\n  // xhr.onreadystatechange = function () {\r\n  //   console.log('1. ready state ' + xhr.readyState);\r\n  //   if (xhr.readyState !== 4) return;\r\n  //   if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status + \". Details: \" + xhr.responseText);\r\n  //   console.log('2. response text' + xhr.responseText)\r\n  //   postResult({ \"transDocId\" :\"transientDocumentId\" + JSON.stringify(xhr.response)});\r\n  // };\r\n  xhr.onreadystatechange = function () {\r\n    if(this.readyState === 4) {\r\n      console.log(this.responseText);\r\n      postResult({ \"transDocId\" :\"transientDocumentId\" + JSON.stringify(xhr.response)});\r\n    }\r\n  };\r\n\r\n  // xhr.open(\"POST\", urlValue + \"/transientDocuments\");\r\n  // xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n  // xhr.setRequestHeader(\"x-api-user\", \"email:nick.williams@ca.fctg.travel\");\r\n  // xhr.setRequestHeader(\"Authorization\", \"Bearer \" + urlToken);\r\n\r\n  xhr.open(\"POST\", \"https://api.na2.adobesign.com/api/rest/v6/transientDocuments\");\r\n  // xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n  xhr.setRequestHeader(\"x-api-user\", \"email:nick.williams@ca.fctg.travel\");\r\n  xhr.setRequestHeader(\"Authorization\", \"Bearer 3AAABLblqZhAsz7fkOci1ND7WDd20jYyUz2iHXweewyBfHX9jB46rtcAVKjL89-ty8o7dqbFLDVje0C5AF5vG_OC88kQNkjfL\");\r\n\r\n  xhr.send(form);\r\n}\r\n\r\n\r\n"],"names":["metadata","ondescribe","console","log","postSchema","objects","displayName","description","isActive","properties","type","methods","outputs","onexecute","objectName","methodName","parameters","configuration","form","FormData","append","xhr","XMLHttpRequest","onreadystatechange","this","readyState","responseText","postResult","JSON","stringify","response","open","setRequestHeader","send","executeGetTransDocId","Error","executeXHRTest"],"mappings":"AACAA,SAAW,YACK,4BACC,+BACA,gEACE,YACC,aACM,qBACP,eACC,yDAEA,aACI,oBACR,eACE,uGAIlBC,WAAa,WACXC,QAAQC,IAAI,QACZC,WAAW,CACTC,QAAS,OACE,CACPC,YAAa,SACbC,YAAa,qBACbC,UAAU,EACVC,WAAY,YACI,CAACH,YAAa,wBAAyBI,KAAM,WAE7DC,QAAS,SACI,CACTL,YAAa,WACbI,KAAM,OACNE,QAAS,CAAC,qBAOtBC,UAAY,UAAUC,WAACA,EAADC,WAAaA,EAAbC,WAAyBA,EAAzBP,WAAqCA,EAArCQ,cAAiDA,WAC7DH,OACD,SAOT,SAAwBC,EAAYC,EAAYP,EAAYQ,UAClDF,OACD,WAOT,SAA8BC,EAAYP,EAAYQ,GACrCA,EAAa,WACbA,EAAa,gBAExBC,EAAO,IAAIC,SACfD,EAAKE,OAAO,OAAQ,wBACpBF,EAAKE,OAAO,YAAa,wBAErBC,EAAM,IAAIC,eAUdD,EAAIE,mBAAqB,WACA,IAApBC,KAAKC,aACNvB,QAAQC,IAAIqB,KAAKE,cACjBC,WAAW,YAAgB,sBAAwBC,KAAKC,UAAUR,EAAIS,cAS1ET,EAAIU,KAAK,OAAQ,gEAEjBV,EAAIW,iBAAiB,aAAc,sCACnCX,EAAIW,iBAAiB,gBAAiB,4GAEtCX,EAAIY,KAAKf,GAzCLgB,CAAqBlB,EAAYP,EAAYQ,uBAGvC,IAAIkB,MAAM,cAAgBpB,EAAa,uBAZ7CqB,CAAerB,EAAYC,EAAYP,EAAYQ,uBAG7C,IAAIkB,MAAM,cAAgBrB,EAAa"}