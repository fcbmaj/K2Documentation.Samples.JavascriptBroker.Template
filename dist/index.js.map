{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import \"@k2oss/k2-broker-core\";\r\n\r\nmetadata = {\r\n  systemName: \"com.k2.example\",\r\n  displayName: \"Example Broker\",\r\n  description: \"An example broker that accesses JSONPlaceholder.\",\r\n  \"configuration\": {\r\n      \"ServiceURL\": {\r\n          displayName: \"JSONPlaceholder Service URL\",\r\n          type: \"string\",\r\n          value: \"https://jsonplaceholder.typicode.com/\"\r\n      }\r\n  }\r\n};\r\n\r\nondescribe = async function ({ configuration }): Promise<void> {\r\n  postSchema({\r\n    objects: {\r\n      todo: {\r\n        displayName: \"TODO\",\r\n        description: \"Manages a TODO list\",\r\n        properties: {\r\n          id: {\r\n            displayName: \"ID\",\r\n            type: \"number\",\r\n          },\r\n          userId: {\r\n            displayName: \"User ID\",\r\n            type: \"number\",\r\n          },\r\n          title: {\r\n            displayName: \"Title\",\r\n            type: \"string\",\r\n          },\r\n          completed: {\r\n            displayName: \"Completed\",\r\n            type: \"boolean\",\r\n          },\r\n        },\r\n        methods: {\r\n          \"get\": {\r\n            displayName: \"Get TODO\",\r\n            type: \"read\",\r\n            inputs: [\"id\"],\r\n            outputs: [\"id\", \"userId\", \"title\", \"completed\"],\r\n          },\r\n          \"getItems\": {\r\n            displayName: \"Get TODOs\",\r\n            type: \"list\",\r\n            outputs: [\"id\", \"userId\", \"title\", \"completed\"],\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n};\r\n\r\nonexecute = async function ({\r\n  objectName,\r\n  methodName,\r\n  parameters,\r\n  properties,\r\n  configuration,\r\n  schema,\r\n}): Promise<void> {\r\n  switch (objectName) {\r\n    case \"todo\":\r\n      await onexecuteTodo(methodName, properties, parameters, configuration);\r\n      break;\r\n    default:\r\n      throw new Error(\"The object \" + objectName + \" is not supported.\");\r\n  }\r\n};\r\n\r\nasync function onexecuteTodo(\r\n  methodName: string,\r\n  properties: SingleRecord,\r\n  parameters: SingleRecord,\r\n  configuration: SingleRecord\r\n\r\n): Promise<void> {\r\n  switch (methodName) {\r\n    case \"get\":\r\n      await onexecuteTodoGet(properties, configuration);\r\n      break;\r\n    case \"getItems\":\r\n      await onexecuteTodoGetAll(parameters, configuration);\r\n      break;\r\n    default:\r\n      throw new Error(\"The method \" + methodName + \" is not supported.\");\r\n  }\r\n}\r\n\r\nfunction onexecuteTodoGet(properties: SingleRecord, configuration: SingleRecord): Promise<void> {\r\n  return new Promise<void>((resolve, reject) => {\r\n    \r\n    var xhr = new XMLHttpRequest();\r\n    var urlValue = configuration[\"ServiceURL\"];\r\n    \r\n    xhr.onreadystatechange = function () {\r\n      try {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200)\r\n          throw new Error(\"Failed with status \" + xhr.status);\r\n\r\n        var obj = JSON.parse(xhr.responseText);\r\n        postResult({\r\n          id: obj.id,\r\n          userId: obj.userId,\r\n          title: obj.title,\r\n          completed: obj.completed,\r\n        });\r\n        resolve();\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    };\r\n\r\n    if (typeof properties[\"id\"] !== \"number\")\r\n      throw new Error('properties[\"id\"] is not of type number');\r\n    xhr.open(\"GET\",urlValue + encodeURIComponent(properties[\"id\"]));\r\n    xhr.setRequestHeader(\"test\", \"test value\");\r\n    xhr.send();\r\n  });\r\n}\r\n\r\nfunction onexecuteTodoGetAll(parameters: SingleRecord, configuration: SingleRecord): Promise<void> {\r\n  return new Promise<void>((resolve, reject) => {\r\n\r\n    var xhr = new XMLHttpRequest();\r\n    var urlValue = configuration[\"ServiceURL\"];\r\n \r\n    xhr.onreadystatechange = function () {\r\n      try {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200)\r\n          throw new Error(\"Failed with status \" + xhr.status);\r\n\r\n        var obj = JSON.parse(xhr.responseText);\r\n        postResult(obj.map(x => {\r\n          return {\r\n          \"id\": x.id,\r\n          \"userId\": x.userId,\r\n          \"title\": x.title,\r\n          \"completed\": x.completed\r\n          }\r\n        }));\r\n        resolve();\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    };\r\n\r\n    xhr.open(\"GET\", urlValue.toString());\r\n    xhr.send();\r\n  });\r\n}\r\n"],"names":["metadata","systemName","displayName","description","type","value","ondescribe","async","configuration","postSchema","objects","todo","properties","id","userId","title","completed","methods","inputs","outputs","onexecute","objectName","methodName","parameters","schema","Promise","resolve","reject","xhr","XMLHttpRequest","urlValue","onreadystatechange","readyState","status","Error","obj","JSON","parse","responseText","postResult","e","open","encodeURIComponent","setRequestHeader","send","onexecuteTodoGet","map","x","toString","onexecuteTodoGetAll","onexecuteTodo"],"mappings":"AAEAA,SAAW,CACTC,WAAY,iBACZC,YAAa,iBACbC,YAAa,iEACI,YACC,CACVD,YAAa,8BACbE,KAAM,SACNC,MAAO,2CAKjBC,WAAaC,gBAAgBC,cAAEA,IAC7BC,WAAW,CACTC,QAAS,CACPC,KAAM,CACJT,YAAa,OACbC,YAAa,sBACbS,WAAY,CACVC,GAAI,CACFX,YAAa,KACbE,KAAM,UAERU,OAAQ,CACNZ,YAAa,UACbE,KAAM,UAERW,MAAO,CACLb,YAAa,QACbE,KAAM,UAERY,UAAW,CACTd,YAAa,YACbE,KAAM,YAGVa,QAAS,KACA,CACLf,YAAa,WACbE,KAAM,OACNc,OAAQ,CAAC,MACTC,QAAS,CAAC,KAAM,SAAU,QAAS,uBAEzB,CACVjB,YAAa,YACbE,KAAM,OACNe,QAAS,CAAC,KAAM,SAAU,QAAS,oBAQ/CC,UAAYb,gBAAgBc,WAC1BA,EAD0BC,WAE1BA,EAF0BC,WAG1BA,EAH0BX,WAI1BA,EAJ0BJ,cAK1BA,EAL0BgB,OAM1BA,WAEQH,OACD,aAQTd,eACEe,EACAV,EACAW,EACAf,UAGQc,OACD,YAWT,SAA0BV,EAA0BJ,UAC3C,IAAIiB,QAAc,CAACC,EAASC,SAE7BC,EAAM,IAAIC,eACVC,EAAWtB,EAAa,cAE5BoB,EAAIG,mBAAqB,kBAEE,IAAnBH,EAAII,WAAkB,UACP,MAAfJ,EAAIK,OACN,MAAM,IAAIC,MAAM,sBAAwBN,EAAIK,YAE1CE,EAAMC,KAAKC,MAAMT,EAAIU,cACzBC,WAAW,CACT1B,GAAIsB,EAAItB,GACRC,OAAQqB,EAAIrB,OACZC,MAAOoB,EAAIpB,MACXC,UAAWmB,EAAInB,YAEjBU,IACA,MAAOc,GACPb,EAAOa,KAIqB,iBAArB5B,EAAU,GACnB,MAAM,IAAIsB,MAAM,0CAClBN,EAAIa,KAAK,MAAMX,EAAWY,mBAAmB9B,EAAU,KACvDgB,EAAIe,iBAAiB,OAAQ,cAC7Bf,EAAIgB,SAvCIC,CAAiBjC,EAAYJ,aAEhC,iBAyCT,SAA6Be,EAA0Bf,UAC9C,IAAIiB,QAAc,CAACC,EAASC,SAE7BC,EAAM,IAAIC,eACVC,EAAWtB,EAAa,WAE5BoB,EAAIG,mBAAqB,kBAEE,IAAnBH,EAAII,WAAkB,UACP,MAAfJ,EAAIK,OACN,MAAM,IAAIC,MAAM,sBAAwBN,EAAIK,YAE1CE,EAAMC,KAAKC,MAAMT,EAAIU,cACzBC,WAAWJ,EAAIW,IAAIC,IACV,IACDA,EAAElC,UACEkC,EAAEjC,aACHiC,EAAEhC,gBACEgC,EAAE/B,cAGjBU,IACA,MAAOc,GACPb,EAAOa,KAIXZ,EAAIa,KAAK,MAAOX,EAASkB,YACzBpB,EAAIgB,SApEIK,CAAoB1B,EAAYf,uBAGhC,IAAI0B,MAAM,cAAgBZ,EAAa,uBAtBvC4B,CAAc5B,EAAYV,EAAYW,EAAYf,uBAGlD,IAAI0B,MAAM,cAAgBb,EAAa"}