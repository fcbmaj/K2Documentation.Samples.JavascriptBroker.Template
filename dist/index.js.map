{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import \"@k2oss/k2-broker-core\";\r\n\r\nmetadata = {\r\n  \"systemName\": \"bazTestBroker\",\r\n  \"displayName\": \"Example Broker\",\r\n  \"description\": \"An example broker that accesses JSONPlaceholder.\",\r\n  \"configuration\": {\r\n      \"ServiceURL\": {\r\n          displayName: \"JSONPlaceholder Service URL\",\r\n          type: \"string\",\r\n          value: \"https://jsonplaceholder.typicode.com/\"\r\n      },\r\n      \"mySpecialSetting\":{\r\n        displayName: \"normal news\",\r\n        type: \"string\",\r\n        value: \"https://bbc.co.uk/\"\r\n      }\r\n  }\r\n};\r\n\r\nondescribe = async function ({ configuration }): Promise<void> {\r\n  postSchema({\r\n    objects: {\r\n      todo: {\r\n        displayName: \"TODO\",\r\n        description: \"Manages a TODO list\",\r\n        properties: {\r\n          id: {\r\n            displayName: \"ID\",\r\n            type: \"number\",\r\n          },\r\n          userId: {\r\n            displayName: \"User ID\",\r\n            type: \"number\",\r\n          },\r\n          title: {\r\n            displayName: \"Title\",\r\n            type: \"string\",\r\n          },\r\n          completed: {\r\n            displayName: \"Completed\",\r\n            type: \"boolean\",\r\n          },\r\n        },\r\n        methods: {\r\n          \"get\": {\r\n            displayName: \"Get TODO\",\r\n            type: \"read\",\r\n            inputs: [\"id\"],\r\n            outputs: [\"id\", \"userId\", \"title\", \"completed\"],\r\n          },\r\n          \"getItems\": {\r\n            displayName: \"Get TODOs\",\r\n            type: \"list\",\r\n            outputs: [\"id\", \"userId\", \"title\", \"completed\"],\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n};\r\n\r\nonexecute = async function ({\r\n  objectName,\r\n  methodName,\r\n  parameters,\r\n  properties,\r\n  configuration,\r\n  schema,\r\n}): Promise<void> {\r\n  switch (objectName) {\r\n    case \"todo\":\r\n      await onexecuteTodo(methodName, properties, parameters, configuration);\r\n      break;\r\n    default:\r\n      throw new Error(\"The object \" + objectName + \" is not supported.\");\r\n  }\r\n};\r\n\r\nasync function onexecuteTodo(\r\n  methodName: string,\r\n  properties: SingleRecord,\r\n  parameters: SingleRecord,\r\n  configuration: SingleRecord\r\n\r\n): Promise<void> {\r\n  switch (methodName) {\r\n    case \"get\":\r\n      await onexecuteTodoGet(properties, configuration);\r\n      break;\r\n    case \"getItems\":\r\n      await onexecuteTodoGetAll(parameters, configuration);\r\n      break;\r\n    default:\r\n      throw new Error(\"The method \" + methodName + \" is not supported.\");\r\n  }\r\n}\r\n\r\nfunction onexecuteTodoGet(properties: SingleRecord, configuration: SingleRecord): Promise<void> {\r\n  return new Promise<void>((resolve, reject) => {\r\n    \r\n    var xhr = new XMLHttpRequest();\r\n    var urlValue = configuration[\"ServiceURL\"];\r\n    \r\n    xhr.onreadystatechange = function () {\r\n      try {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200)\r\n          throw new Error(\"Failed with status \" + xhr.status);\r\n\r\n        var obj = JSON.parse(xhr.responseText);\r\n        postResult({\r\n          id: obj.id,\r\n          userId: obj.userId,\r\n          title: obj.title,\r\n          completed: obj.completed,\r\n        });\r\n        resolve();\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    };\r\n\r\n    if (typeof properties[\"id\"] !== \"number\")\r\n      throw new Error('properties[\"id\"] is not of type number');\r\n    xhr.open(\"GET\",urlValue + \"/todos/\" + encodeURIComponent(properties[\"id\"]));\r\n    xhr.setRequestHeader(\"test\", \"test value\");\r\n    xhr.send();\r\n  });\r\n}\r\n\r\nfunction onexecuteTodoGetAll(parameters: SingleRecord, configuration: SingleRecord): Promise<void> {\r\n  return new Promise<void>((resolve, reject) => {\r\n\r\n    var xhr = new XMLHttpRequest();\r\n    var urlValue = configuration[\"ServiceURL\"];\r\n \r\n    xhr.onreadystatechange = function () {\r\n      try {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200)\r\n          throw new Error(\"Failed with status \" + xhr.status);\r\n\r\n        var obj = JSON.parse(xhr.responseText);\r\n        postResult(obj.map(x => {\r\n          return {\r\n          \"id\": x.id,\r\n          \"userId\": x.userId,\r\n          \"title\": x.title,\r\n          \"completed\": x.completed\r\n          }\r\n        }));\r\n        resolve();\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    };\r\n\r\n    xhr.open(\"GET\", urlValue + \"/todos/\");\r\n    xhr.send();\r\n  });\r\n}\r\n"],"names":["metadata","displayName","type","value","ondescribe","async","configuration","postSchema","objects","todo","description","properties","id","userId","title","completed","methods","inputs","outputs","onexecute","objectName","methodName","parameters","schema","Promise","resolve","reject","xhr","XMLHttpRequest","urlValue","onreadystatechange","readyState","status","Error","obj","JSON","parse","responseText","postResult","e","open","encodeURIComponent","setRequestHeader","send","onexecuteTodoGet","map","x","onexecuteTodoGetAll","onexecuteTodo"],"mappings":"AAEAA,SAAW,YACK,4BACC,6BACA,iEACE,YACC,CACVC,YAAa,8BACbC,KAAM,SACNC,MAAO,0DAEQ,CACjBF,YAAa,cACbC,KAAM,SACNC,MAAO,wBAKfC,WAAaC,gBAAgBC,cAAEA,IAC7BC,WAAW,CACTC,QAAS,CACPC,KAAM,CACJR,YAAa,OACbS,YAAa,sBACbC,WAAY,CACVC,GAAI,CACFX,YAAa,KACbC,KAAM,UAERW,OAAQ,CACNZ,YAAa,UACbC,KAAM,UAERY,MAAO,CACLb,YAAa,QACbC,KAAM,UAERa,UAAW,CACTd,YAAa,YACbC,KAAM,YAGVc,QAAS,KACA,CACLf,YAAa,WACbC,KAAM,OACNe,OAAQ,CAAC,MACTC,QAAS,CAAC,KAAM,SAAU,QAAS,uBAEzB,CACVjB,YAAa,YACbC,KAAM,OACNgB,QAAS,CAAC,KAAM,SAAU,QAAS,oBAQ/CC,UAAYd,gBAAgBe,WAC1BA,EAD0BC,WAE1BA,EAF0BC,WAG1BA,EAH0BX,WAI1BA,EAJ0BL,cAK1BA,EAL0BiB,OAM1BA,WAEQH,OACD,aAQTf,eACEgB,EACAV,EACAW,EACAhB,UAGQe,OACD,YAWT,SAA0BV,EAA0BL,UAC3C,IAAIkB,QAAc,CAACC,EAASC,SAE7BC,EAAM,IAAIC,eACVC,EAAWvB,EAAa,cAE5BqB,EAAIG,mBAAqB,kBAEE,IAAnBH,EAAII,WAAkB,UACP,MAAfJ,EAAIK,OACN,MAAM,IAAIC,MAAM,sBAAwBN,EAAIK,YAE1CE,EAAMC,KAAKC,MAAMT,EAAIU,cACzBC,WAAW,CACT1B,GAAIsB,EAAItB,GACRC,OAAQqB,EAAIrB,OACZC,MAAOoB,EAAIpB,MACXC,UAAWmB,EAAInB,YAEjBU,IACA,MAAOc,GACPb,EAAOa,KAIqB,iBAArB5B,EAAU,GACnB,MAAM,IAAIsB,MAAM,0CAClBN,EAAIa,KAAK,MAAMX,EAAW,UAAYY,mBAAmB9B,EAAU,KACnEgB,EAAIe,iBAAiB,OAAQ,cAC7Bf,EAAIgB,SAvCIC,CAAiBjC,EAAYL,aAEhC,iBAyCT,SAA6BgB,EAA0BhB,UAC9C,IAAIkB,QAAc,CAACC,EAASC,SAE7BC,EAAM,IAAIC,eACVC,EAAWvB,EAAa,WAE5BqB,EAAIG,mBAAqB,kBAEE,IAAnBH,EAAII,WAAkB,UACP,MAAfJ,EAAIK,OACN,MAAM,IAAIC,MAAM,sBAAwBN,EAAIK,YAE1CE,EAAMC,KAAKC,MAAMT,EAAIU,cACzBC,WAAWJ,EAAIW,IAAIC,IACV,IACDA,EAAElC,UACEkC,EAAEjC,aACHiC,EAAEhC,gBACEgC,EAAE/B,cAGjBU,IACA,MAAOc,GACPb,EAAOa,KAIXZ,EAAIa,KAAK,MAAOX,EAAW,WAC3BF,EAAIgB,SApEII,CAAoBzB,EAAYhB,uBAGhC,IAAI2B,MAAM,cAAgBZ,EAAa,uBAtBvC2B,CAAc3B,EAAYV,EAAYW,EAAYhB,uBAGlD,IAAI2B,MAAM,cAAgBb,EAAa"}