{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import \"@k2oss/k2-broker-core\";\r\n\r\nmetadata = {\r\n  \"systemName\": \"bazTestBroker\",\r\n  \"displayName\": \"Adobesign Broker\",\r\n  \"description\": \"Adobesign broker that accesses JSONPlaceholder.\",\r\n  \"configuration\": {\r\n      \"ServiceURL\": {\r\n          \"displayName\" : \"Adobesign URL\",\r\n          \"type\" : \"string\",\r\n          \"value\" : \"https://api.na2.adobesign.com/api/rest/v6\"\r\n      },\r\n      \"AccessToken\":{\r\n        \"displayName\" : \"Access Token\",\r\n        \"type\": \"string\",\r\n        \"value\" : \"3AAABLblqZhAsz7fkOci1ND7WDd20jYyUz2iHXweewyBfHX9jB46rtcAVKjL89-ty8o7dqbFLDVje0C5AF5vG_OC88kQNkjfL\"\r\n      }\r\n  }\r\n};\r\n\r\nondescribe =  function () {\r\n  console.log('test');\r\n  postSchema({\r\n    objects: {\r\n      getid: {\r\n        displayName: \"Get ID\",\r\n        description: \"Get Transaction ID\",\r\n        isActive: true,\r\n        properties: {\r\n          \"file1\": { \r\n            displayName: \"File1\",\r\n            description: \"Input File Prop\",\r\n            type: \"attachment\"\r\n          },\r\n          \"transDocId\": {\r\n            displayName: \"transient Document Id\",\r\n            type: \"string\",\r\n          },\r\n        },\r\n        methods: {\r\n          \"UploadFile\": {\r\n            displayName: \"Upload File\",\r\n            description: \"Upload File\",\r\n            type: \"read\",\r\n            inputs: [\"file1\"],\r\n            outputs: [\"transDocId\"]\r\n           }\r\n         }\r\n       }\r\n     }\r\n  });\r\n};\r\n\r\nonexecute = function ({objectName, methodName, parameters, properties, configuration }) {\r\n  switch (objectName) {\r\n    case \"getid\":\r\n      executeXHRTest(methodName, parameters, properties, configuration);\r\n      break;\r\n    default:\r\n      throw new Error(\"The object \" + objectName + \" is not supported.\");\r\n  }\r\n};\r\n\r\nfunction executeXHRTest(methodName, parameters, properties, configuration) {\r\n  switch (methodName) {\r\n    case \"UploadFile\":\r\n      executeUploadFileMethod(parameters, properties, configuration);\r\n      break;\r\n    default:\r\n      throw new Error(\"The method \" + methodName + \" is not supported.\");\r\n  }\r\n}\r\n\r\nfunction executeUploadFileMethod(parameters, properties, configuration) {\r\n  \r\n  var urlValue = configuration[\"ServiceURL\"];\r\n  var urlToken = configuration[\"AccessToken\"];\r\n\r\n  var form = new FormData();\r\n  // get file name\r\n  form.append(\"File-Name\", properties[\"file1\"].filename);\r\n  console.log(\"Filename working: \" + properties[\"file1\"].filename);\r\n \r\n  // get file content\r\n  form.append(\"File\", \"dGVzdA==\");\r\n  console.log(\"content: \" + properties[\"file1\"].content);\r\n  console.log(\"response: \" + properties[\"file1\"].content.text());\r\n  // console.log(\"Content: \" + properties[\"file1\"].Content);\r\n\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.onreadystatechange = function () {\r\n    if (xhr.readyState !== 4) return;\r\n    if (xhr.status !== 200) {\r\n      console.log(\"Failed with status \" + xhr.status + \". Details: \" + xhr.responseText); \r\n      throw new Error(\"Failed with status \" + xhr.status + \". Details: \" + xhr.responseText);\r\n    }\r\n\r\n    var obj = JSON.parse(xhr.responseText);\r\n    console.log('3rd response text' + xhr.responseText)\r\n    postResult({\r\n      \"transDocId\": obj.transientDocumentId, \r\n    });\r\n  };\r\n\r\n\r\n  xhr.open(\"POST\", urlValue + \"/transientDocuments\");\r\n  //xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n  xhr.setRequestHeader(\"x-api-user\", \"email:nick.williams@ca.fctg.travel\");\r\n  xhr.setRequestHeader(\"Authorization\", \"Bearer \" + urlToken);\r\n  xhr.send(form);\r\n}\r\n\r\n\r\n"],"names":["metadata","ondescribe","console","log","postSchema","objects","getid","displayName","description","isActive","properties","type","methods","inputs","outputs","onexecute","objectName","methodName","parameters","configuration","urlValue","urlToken","form","FormData","append","filename","content","text","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","Error","obj","JSON","parse","postResult","transientDocumentId","open","setRequestHeader","send","executeUploadFileMethod","executeXHRTest"],"mappings":"AAEAA,SAAW,YACK,4BACC,+BACA,gEACE,YACC,aACM,qBACP,eACC,yDAEA,aACI,oBACR,eACE,uGAKlBC,WAAc,WACZC,QAAQC,IAAI,QACZC,WAAW,CACTC,QAAS,CACPC,MAAO,CACLC,YAAa,SACbC,YAAa,qBACbC,UAAU,EACVC,WAAY,OACD,CACPH,YAAa,QACbC,YAAa,kBACbG,KAAM,yBAEM,CACZJ,YAAa,wBACbI,KAAM,WAGVC,QAAS,YACO,CACZL,YAAa,cACbC,YAAa,cACbG,KAAM,OACNE,OAAQ,CAAC,SACTC,QAAS,CAAC,qBAQtBC,UAAY,UAAUC,WAACA,EAADC,WAAaA,EAAbC,WAAyBA,EAAzBR,WAAqCA,EAArCS,cAAiDA,WAC7DH,OACD,SAQT,SAAwBC,EAAYC,EAAYR,EAAYS,UAClDF,OACD,cAQT,SAAiCC,EAAYR,EAAYS,OAEnDC,EAAWD,EAAa,WACxBE,EAAWF,EAAa,YAExBG,EAAO,IAAIC,SAEfD,EAAKE,OAAO,YAAad,EAAU,MAAUe,UAC7CvB,QAAQC,IAAI,qBAAuBO,EAAU,MAAUe,UAGvDH,EAAKE,OAAO,OAAQ,YACpBtB,QAAQC,IAAI,YAAcO,EAAU,MAAUgB,SAC9CxB,QAAQC,IAAI,aAAeO,EAAU,MAAUgB,QAAQC,YAGnDC,EAAM,IAAIC,eACdD,EAAIE,mBAAqB,cACA,IAAnBF,EAAIG,eACW,MAAfH,EAAII,aACN9B,QAAQC,IAAI,sBAAwByB,EAAII,OAAS,cAAgBJ,EAAIK,cAC/D,IAAIC,MAAM,sBAAwBN,EAAII,OAAS,cAAgBJ,EAAIK,kBAGvEE,EAAMC,KAAKC,MAAMT,EAAIK,cACzB/B,QAAQC,IAAI,oBAAsByB,EAAIK,cACtCK,WAAW,YACKH,EAAII,wBAKtBX,EAAIY,KAAK,OAAQpB,EAAW,uBAE5BQ,EAAIa,iBAAiB,aAAc,sCACnCb,EAAIa,iBAAiB,gBAAiB,UAAYpB,GAClDO,EAAIc,KAAKpB,GA3CLqB,CAAwBzB,EAAYR,EAAYS,uBAG1C,IAAIe,MAAM,cAAgBjB,EAAa,uBAb7C2B,CAAe3B,EAAYC,EAAYR,EAAYS,uBAG7C,IAAIe,MAAM,cAAgBlB,EAAa"}