metadata={systemName:"bazTestBroker",displayName:"Adobesign Broker",description:"Adobesign broker that accesses JSONPlaceholder.",configuration:{ServiceURL:{displayName:"Adobesign URL",type:"string",value:"https://api.na2.adobesign.com/api/rest/v6"},AccessToken:{displayName:"Access Token",type:"string",value:"3AAABLblqZhAsz7fkOci1ND7WDd20jYyUz2iHXweewyBfHX9jB46rtcAVKjL89-ty8o7dqbFLDVje0C5AF5vG_OC88kQNkjfL"}}},ondescribe=async function({configuration:e}){postSchema({objects:{getid:{displayName:"Get ID",description:"Get Transaction ID",properties:{transientDocumentId:{displayName:"transient Document Id",type:"string"}},methods:{getDocs:{displayName:"Get Docs",type:"read",outputs:["transientDocumentId"]}}}}})},onexecute=async function({objectName:e,methodName:t,parameters:s,properties:a,configuration:n,schema:o}){switch(e){case"getid":await async function(e,t,s,a){switch(e){case"getDocs":await function(e,t){return new Promise((e,s)=>{var a=new XMLHttpRequest,n=t.ServiceURL,o=t.AccessToken,r=new FormData;r.append("File","sign this doc please"),r.append("File-Name","please_sign.docx"),(a=new XMLHttpRequest).onreadystatechange=function(){try{if(console.log("1st ready state "+a.readyState),4!==a.readyState)return;if(200!==a.status)throw new Error("Failed with status "+a.status+" ** "+JSON.stringify(a.response));console.log("2nd done");var t=JSON.parse(a.responseText);console.log("3rd response text"+a.responseText),postResult({transientDocumentId:t.id}),e()}catch(e){s(e)}},a.open("POST",n+"/transientDocuments"),a.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),a.setRequestHeader("x-api-user","email:nick.williams@ca.fctg.travel"),a.setRequestHeader("Authorization","Bearer "+o),a.send(r),console.log("data being sent "+JSON.stringify(r))})}(0,a);break;default:throw new Error("The method "+e+" is not supported.")}}(t,0,0,n);break;default:throw new Error("The object "+e+" is not supported.")}};
//# sourceMappingURL=index.js.map
