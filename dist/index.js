metadata={systemName:"bazTestBroker",displayName:"Adobesign Broker",description:"Adobesign broker that accesses JSONPlaceholder.",configuration:{ServiceURL:{displayName:"Adobesign URL",type:"string",value:"https://api.na2.adobesign.com/api/rest/v6"},AccessToken:{displayName:"Access Token",type:"string",value:"3AAABLblqZhAsz7fkOci1ND7WDd20jYyUz2iHXweewyBfHX9jB46rtcAVKjL89-ty8o7dqbFLDVje0C5AF5vG_OC88kQNkjfL"}}},ondescribe=async function({configuration:e}){postSchema({objects:{todo:{displayName:"TO DO",description:"Manages a TODO list",properties:{id:{displayName:"ID",type:"number"},userId:{displayName:"User ID",type:"number"},title:{displayName:"Title",type:"string"},completed:{displayName:"Completed",type:"boolean"}},methods:{get:{displayName:"Get TO DO",type:"read",inputs:["id"],outputs:["id","userId","title","completed"]},getItems:{displayName:"Get TO DOs",type:"list",outputs:["id","userId","title","completed"]},getDocs:{displayName:"Get Docs",type:"list",outputs:["id","userId","title","completed"]}}}}})},onexecute=async function({objectName:e,methodName:t,parameters:s,properties:a,configuration:r,schema:o}){switch(e){case"todo":await async function(e,t,s,a){switch(e){case"get":await function(e,t){return new Promise((s,a)=>{var r=new XMLHttpRequest,o=t.ServiceURL;if(r.onreadystatechange=function(){try{if(4!==r.readyState)return;if(200!==r.status)throw new Error("Failed with status "+r.status);var e=JSON.parse(r.responseText);postResult({id:e.id,userId:e.userId,title:e.title,completed:e.completed}),s()}catch(e){a(e)}},"number"!=typeof e.id)throw new Error('properties["id"] is not of type number');r.open("GET",o+"/todos/"+encodeURIComponent(e.id)),r.setRequestHeader("test","test value"),r.send()})}(t,a);break;case"getItems":await function(e,t){return new Promise((e,s)=>{var a=new XMLHttpRequest,r=t.ServiceURL;a.onreadystatechange=function(){try{if(4!==a.readyState)return;if(200!==a.status)throw new Error("Failed with status "+a.status);var t=JSON.parse(a.responseText);postResult(t.map(e=>({id:e.id,userId:e.userId,title:e.title,completed:e.completed}))),e()}catch(e){s(e)}},a.open("GET",r+"/todos"),a.send()})}(0,a);break;case"getDocs":await function(e,t){return new Promise((e,s)=>{var a=new XMLHttpRequest,r=t.ServiceURL,o=t.AccessToken,i=new FormData;a.onreadystatechange=function(){try{if(4!==a.readyState)return;if(200!==a.status)throw new Error("Failed with status "+a.status);var t=JSON.parse(a.responseText);postResult({transientDocumentId:t.id}),e()}catch(e){s(e)}},a.open("POST",r+"/transientDocuments"),a.setRequestHeader("Authorization","Bearer "+o),a.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),a.setRequestHeader("x-api-user","email:nick.williams@ca.fctg.travel"),a.setRequestHeader("File","C:\\Users\\majevadb\\OneDrive - FC USA Inc\\Documents\\Test Documents\\Adobe Sign\\TestTwo.docx"),a.send(i)})}(0,a);break;default:throw new Error("The method "+e+" is not supported.")}}(t,a,0,r);break;default:throw new Error("The object "+e+" is not supported.")}};
//# sourceMappingURL=index.js.map
